# Preamble
name: Test SaltProc (conda-v-2)

on:
  push:
    branches:
      - ci-testing
  #  schedule:
  #    - cron: '0 9 * * 1' # run every monday @ 9AM

jobs:
  test-saltproc-conda:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
# Check for existing cache
      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Find existing cache
        id: conda-cache
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: |
            ~/conda_pkgs_dir
            conda-linux-64.lock
          #key: ${{ runner.os }}-conda2-$${ hashFiles('conda-dependencies.yml')-${{ env.DATE }}-${{ env.CACHE_NUMBER }} }
          key: ${{ runner.os }}-conda2-$${ hashFiles('envrionment.yml')-${{ env.DATE }}-${{ env.CACHE_NUMBER }} }
          restore-keys: |
            ${{ runner.os }}-conda2-

# Setup python
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: conda-lock
        if: steps.conda-cache.outputs.cache-hit != 'true'
        run: pip install conda-lock

      - name: Create lockfile
        if: steps.conda-cache.outputs.cache-hit != 'true'
        run: |
          #conda-lock -f conda-dependencies.yml -p linux-64
          conda-lock -f environment.yml -p linux-64

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: conda-linux-64.lock
          use-only-tar-bz2: true

      - name: Build saltproc
        run: python setup.py install

      - name: Test saltproc
        run: pytest --ignore saltproc/tests/integration_tests saltproc
