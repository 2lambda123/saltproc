# Preamble
name: Create next micro release 

on:
  # enable worflow to be run manually
  workflow_dispatch:

jobs:
  next-release-micro:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get most recent release version
        run: |
          echo "RELEASE_VERSION=$(gh api repos/${{ github.repository }}/tags --jq '.[0] | .name')" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Increment micro version
        run: |
          IFS='.' read -ra arr <<< ${{ env.RELEASE_VERSION }}
          MICRO_VERSION=$((${arr[2]}+1))
          arr[2]=$MICRO_VERSION
          NEW_RELEASE_VERSION="${arr[0]}.${arr[1]}.${arr[2]}"
          echo "NEW_RELEASE_VERSION="$NEW_RELEASE_VERSION >> $GITHUB_ENV

      - name: Create a new release
        run: |
          gh api repos/${{ github.repository }}/releases \
          -H "Authorize: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -X POST \
          -F name=${{ env.NEW_RELEASE_VERSION }} \
          -F tag_name=${{ env.NEW_RELEASE_VERSION }} \
          -F draft=true 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Create a new milestone.
        run: |
          gh api repos/${{ github.repository }}/milestones \
          -H "Authorize: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -X POST \
          -F title=${{ env.NEW_RELEASE_VERSION }} 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new release notes
        run: |
          cp doc/releasenotes/template.rst doc/releasenotes/${{ env.NEW_RELEASE_VERSION }}.rst
          sed -i "s/vx.x.x/${{ env.NEW_RELEASE_VERSION }}/g" doc/releasenotes/${{ env.NEW_RELEASE_VERSION }}.rst
          git add doc/releasenotes/${{ env.NEW_RELEASE_VERSION }}.rst
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -am "created ${{ env.NEW_RELEASE_VERSION }} release notes"
          git push
